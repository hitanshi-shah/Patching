pipeline{
     agent {
       docker {
             image 'harimaumalaya:v0.0.1j'
             label 'docker-machine1'
             registryUrl 'https://046099537821.dkr.ecr.us-east-1.amazonaws.com'
	     args '-v $WORKSPACE:/var/tmp'
	     args '-u root'
	     reuseNode true

       }
   }
	environment {
        Linux_host = credentials('Linux')
        username = "${Linux_host_USR}"
        password = "${Linux_host_PSW}"
	GIT_TOKEN = credentials('sashangit')

    }
    
    
   stages {
      stage('Install Ansible'){
            steps{
		         script{  
                 sh """
                    apt-get install -y ansible
                    pip install boto3
                    ls -ltr /usr/bin/*
                    ansible --version
                    which pip
                    which python
                    python3 -m pip install boto3
		              pwd
		              ls -ltr
                    """
            }
	    }
     }     
        stage('Patching') {
            when { expression { return fileExists ('rhsa_precheckpass') } }
            steps {
                script {
                          sh '''
                                echo "proceeding to update"
                                
                                ansible-playbook -i rhsa_precheckpass -e  "username=$username" -e "password=$password" rhel_patch.yml
				ansible-playbook -i rhsa_precheckpass -e  "username=$username" -e "password=$password" -e "GIT_TOKEN=$GIT_TOKEN" remotestore.yml

                             '''
            }
                    }
            }
            
        stage('Trigger Postcheck from patching') {
            when { expression { return fileExists ('rhsa_precheckpass') } }
            steps {
                script {
                    build job: "Postcheck", wait: true
                
                }
            }
            }
            
            
    }
}
