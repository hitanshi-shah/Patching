pipeline{
     agent {
       docker {
             image 'harimaumalaya:v0.0.1j'
             label 'docker'
             registryUrl 'https://046099537821.dkr.ecr.us-east-1.amazonaws.com'
	     args '-v $WORKSPACE:/var/tmp'
	     args '-u root'

       }
   }
   	environment {
        Linux_host = credentials('Windows')
        username = "${Linux_host_USR}"
        password = "${Linux_host_PSW}"
	GIT_TOKEN = credentials('sashangit')	
    }

   stages {
      stage('Install Ansible'){
            steps{
		         script{  
                 sh """
                    apt-get install -y ansible
                    pip install boto3
                    ls -ltr /usr/bin/*
                    ansible --version
                    which pip
                    which python
                    python3 -m pip install boto3
		              pwd
		              ls -ltr
                    """
            }
	    }
     }     
    
       stage('Pingtest') {
        when {expression { return fileExists ('am_precheck_passed') }}
            steps {
                script {
                          
                                sh ' ansible-playbook -i am_precheck_passed -e  "username=$username" -e "password=$password" win_postcheck_installedkbs.yml'
            }       
            }
            }
            
            
        stage('Postcheck-info') {
        when {expression { return fileExists ('am_precheck_passed') }}            
            steps {
                script {
                                
                                sh '''
                                ansible-playbook -i am_precheck_passed -e  "username=$username" -e "password=$password" windows_postcheckinfo.yml
				'''
            }
            }
            }
            
	    
        stage('Postcheck-report') {
        when {expression { return fileExists ('am_precheck_passed') }}            
            steps {
                script {
                                
                                sh '''
			          ansible-playbook -i am_precheck_passed -e  "username=$username" -e "password=$password" report-latest-win.yml
			     	  ls -lart
			     	  bash csv_merge.sh
			     	  cat winmergedup.csv >> reportwin.csv
				  awk -F ',' '!($1 in seen) {order[++last] = $1} {seen[$1] = $0} END {for (i = 1; i <= last; i++) print seen[order[i]]}' "reportwin.csv" > "report1.csv"
			     	  ansible-playbook -vvv -i am_precheck_passed -e  "username=$username" -e "password=$password" report-win-fetch.yml
				ansible-playbook -i am_precheck_passed -e  "username=$username" -e "password=$password"  -e "GIT_TOKEN=$GIT_TOKEN"   remotestore-winpost.yml 
                              '''
            }
            }
            }    
	    
	    
	    
/*          stage('SNOW-creation') {
        when {expression { return fileExists ('am_precheck_passed1') }}
            steps {
                    sh '''
                    echo "SNOW ticket
                    '''
            }
                    
        }*/
    }
}
